<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://tapichugina.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://tapichugina.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-05-01T17:06:47+00:00</updated><id>https://tapichugina.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Where are happy employees working in the USA?</title><link href="https://tapichugina.github.io/blog/2022/happy_employers/" rel="alternate" type="text/html" title="Where are happy employees working in the USA?"/><published>2022-12-20T15:59:00+00:00</published><updated>2022-12-20T15:59:00+00:00</updated><id>https://tapichugina.github.io/blog/2022/happy_employers</id><content type="html" xml:base="https://tapichugina.github.io/blog/2022/happy_employers/"><![CDATA[<p><a href="https://public.tableau.com/app/profile/tatyana.pichugina/viz/Listofbestemployers/Dashboard1?publish=yes">Dashboard</a> <br/> Link to <a href="https://www.forbes.com/lists/best-employers-by-state/?sh=57aaba361983">Datasource</a> <br/> Posted on <a href="https://medium.com/@ttatyana.pichugina/where-are-happy-employees-working-in-the-usa-9d60be27dfb9"> Medium</a><br/> Link to <a href="https://github.com/tapichugina/Portfolio/tree/main/Dashboards/AmericaBestEmployers">Github</a></p> <p>I am quite new to the USA and trying to understand and figure out how to fit into this completely new world. Surprisingly, before arriving I had many misconceptions in my head that I got from films and news. As I have discovered, the best way to fight misconceptions is through data analysis. For instance, it was interesting to learn what kinds of industries are present in the US and what people are doing for a living. To find this, I scraped the most recent (2022) dataset by Forbes on America’s Best Employers. I picked this one because I like companies with happy employees. Here I would like to present you my public Tableau dashboard dissecting this dataset <a href="https://public.tableau.com/app/profile/tatyana.pichugina/viz/Listofbestemployers/Dashboard1?publish=yes">link</a>.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/happy_employers/Dashboard-480.webp 480w,/assets/img/happy_employers/Dashboard-800.webp 800w,/assets/img/happy_employers/Dashboard-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/happy_employers/Dashboard.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Before the analysis, I thought that most of the happy employees work for IT. This is not true, the IT industry is quite small and takes only 14th place by the total number of happy employees. The 1st place is the US government companies, 2nd place is Retail and Wholesale companies and 3rd place is Health Care companies.</p> <p>Looking at the cars on the streets, I have detected that most of them are from Japanese brands such as Toyota, Honda, and Nissan and just a few by Ford. I thought that the Automotive industry is non-existent in the USA. I was wrong again. Honda is on this list with 200K employees, Toyota has 170K employees, and Nissan has 130K. Brands are originally Japanese but this workforce is in the US.</p> <p>Surprisingly, companies from the happy employee list are big and mature, they generally have over 20K employees and are older than 50 years. The exceptions from the trend are companies from the Education industry (Universities) that have less than 10K employees and companies from IT and Media industries that are less than 50 years old.</p> <p>Thank you for reading!</p>]]></content><author><name></name></author><category term="dataviz"/><summary type="html"><![CDATA[based on Forbes 2022 America’s Best Employers By State list]]></summary></entry><entry><title type="html">Create LinkedIn backgrounds by turning images into heatmaps</title><link href="https://tapichugina.github.io/blog/2022/images_to_heatmaps/" rel="alternate" type="text/html" title="Create LinkedIn backgrounds by turning images into heatmaps"/><published>2022-09-14T15:59:00+00:00</published><updated>2022-09-14T15:59:00+00:00</updated><id>https://tapichugina.github.io/blog/2022/images_to_heatmaps</id><content type="html" xml:base="https://tapichugina.github.io/blog/2022/images_to_heatmaps/"><![CDATA[<p>This post shows creative way to make a LinkedIn background using Python Scikit-image<br/> Link to <a href="https://github.com/tapichugina/Dataviz-turning-images-to-heatmaps">Github</a><br/> Posted on <a href="https://medium.com/@ttatyana.pichugina/turning-images-into-heatmaps-a703ce545755"> Medium</a></p> <h2 id="motivation">Motivation</h2> <p>If you are looking for a creative way to make a LinkedIn background, you may play with turning images into heatmaps. Heatmaps are beautiful and can be an artistic masterpiece. They will give you a lot of freedom in colors and effects. Here are some steps to consider.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/image_1-480.webp 480w,/assets/img/image_to_heatmap/image_1-800.webp 800w,/assets/img/image_to_heatmap/image_1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/image_1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="image-preparation">Image preparation</h2> <p>Find RGB image (pixabay is a great source of images). The format does not play a huge role. It could be jpg or png. The LinkedIn recommended background image size is 2000px by 600 px (width,high). Finding such an image strip is difficult, so the image often should be cropped or resized beforehand.</p> <p>In my experience images with big distinctive objects work the best. I have selected a pretty butterfly from pixabay <a href="https://pixabay.com/ru/photos/%d0%b1%d0%b0%d0%b1%d0%be%d1%87%d0%ba%d0%b0-lycaena-dispar-7320158/"> link </a>. The RGB image size was 1293px in height and 1920px in width with 3 color channels. I have cut the 600 px high stripe.</p> <p>The heatmap is a tool to visualize a 2D matrix, so we need to convert the stripe to grayscale, which turns a 3D matrix into a 2D matrix.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Load original image and cut the stripe
</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span> 
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">skimage.io</span> <span class="k">as</span> <span class="n">io</span>


<span class="n">img</span><span class="o">=</span><span class="n">io</span><span class="p">.</span><span class="nf">imread</span><span class="p">(</span><span class="sh">"</span><span class="s">img_file.jpg</span><span class="sh">"</span><span class="p">)</span>
<span class="n">img_cut</span><span class="o">=</span><span class="n">img</span><span class="p">[</span><span class="mi">400</span><span class="p">:</span><span class="mi">1000</span><span class="p">,:,:]</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">img_cut</span><span class="p">)</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_2-480.webp 480w,/assets/img/image_to_heatmap/Image_2-800.webp 800w,/assets/img/image_to_heatmap/Image_2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Convert to gray
</span>
<span class="kn">from</span> <span class="n">skimage.color</span> <span class="kn">import</span> <span class="n">rgb2gray</span>
<span class="n">gray_img</span> <span class="o">=</span> <span class="nf">rgb2gray</span><span class="p">(</span><span class="n">img_cut</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">gray_img</span><span class="p">,</span><span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray</span><span class="sh">'</span><span class="p">)</span>

</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_3-480.webp 480w,/assets/img/image_to_heatmap/Image_3-800.webp 800w,/assets/img/image_to_heatmap/Image_3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="pixelated-artwork-effect">Pixelated artwork effect</h2> <p>The aim of this step is to make the image look like pixelated artwork. The image is divided into non-overlapping blocks. How to work with blocks I have found <a href="https://tirthajyoti.github.io/Scikit-image-book/Block_view_mean_max_median_sampling.html">here</a>. The bigger the size of the block the more pixelated it looks.</p> <p>For each block, some representative value was calculated. Here, I use the minimum value across the block, but maximum, or median, any metric you like should work as well.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">skimage</span> <span class="kn">import</span> <span class="n">util</span>

<span class="c1"># select box size
</span><span class="n">block_shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> 
<span class="n">view</span> <span class="o">=</span> <span class="n">util</span><span class="p">.</span><span class="nf">view_as_blocks</span><span class="p">(</span><span class="n">gray_img</span><span class="p">,</span> <span class="n">block_shape</span><span class="p">)</span>

<span class="c1"># collapse the last two dimensions in one
</span><span class="n">flatten_view</span> <span class="o">=</span> <span class="n">view</span><span class="p">.</span><span class="nf">reshape</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">view</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># choose min within box
</span><span class="n">min_view</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">flatten_view</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">min_view</span><span class="p">,</span><span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">gray</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_5-480.webp 480w,/assets/img/image_to_heatmap/Image_5-800.webp 800w,/assets/img/image_to_heatmap/Image_5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_5.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="choose-colormap-for-heatmap">Choose colormap for heatmap</h2> <p>This is the step allowing the most artistic freedom. The seaborn color palette could be a good starting point <a href="https://seaborn.pydata.org/tutorial/color_palettes.html">link</a>. I personally like diverging color palettes.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="c1"># save figure for LinkedIn recommended size (2000 width, 600 height)
</span><span class="n">my_dpi</span><span class="o">=</span><span class="mi">96</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">2000</span><span class="o">/</span><span class="n">my_dpi</span><span class="p">,</span> <span class="mi">600</span><span class="o">/</span><span class="n">my_dpi</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span><span class="n">my_dpi</span><span class="p">)</span> 
<span class="n">sns</span><span class="p">.</span><span class="nf">heatmap</span><span class="p">(</span><span class="n">max_view</span><span class="p">,</span><span class="n">xticklabels</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">yticklabels</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">cmap</span><span class="o">=</span><span class="sh">"</span><span class="s">coolwarm</span><span class="sh">"</span><span class="p">,</span><span class="n">cbar</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="sh">"</span><span class="s">coolwarm.png</span><span class="sh">"</span><span class="p">,</span><span class="n">bbox_inches</span><span class="o">=</span><span class="sh">'</span><span class="s">tight</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_6-480.webp 480w,/assets/img/image_to_heatmap/Image_6-800.webp 800w,/assets/img/image_to_heatmap/Image_6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_6.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_7-480.webp 480w,/assets/img/image_to_heatmap/Image_7-800.webp 800w,/assets/img/image_to_heatmap/Image_7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/image_to_heatmap/Image_8-480.webp 480w,/assets/img/image_to_heatmap/Image_8-800.webp 800w,/assets/img/image_to_heatmap/Image_8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/image_to_heatmap/Image_8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Choose what you like the best!</p>]]></content><author><name></name></author><category term="image-processing,"/><category term="dataviz"/><summary type="html"><![CDATA[creative way to make a LinkedIn background]]></summary></entry></feed>